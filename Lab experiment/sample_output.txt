Program 1 sample output:-

Enter the size of the array: 4
Choose an operation:    
1. Insert an element    
2. Delete an element    
3. Search for an element
4. Sort the array       
5. Display the array    
6. Exit
1
Enter the element to insert: 1
Enter the position: 0
Choose an operation:    
1. Insert an element    
2. Delete an element    
3. Search for an element
4. Sort the array       
5. Display the array    
6. Exit
1
Enter the element to insert: 22
Enter the position: 1
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
1
Enter the element to insert: 66
Enter the position: 2
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
1
Enter the element to insert: 44
Enter the position: 3
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
1
Enter the element to insert: 5
Enter the position: 4
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
5
1 22 66 44 5 
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
4
Array sorted.
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
5
1 5 22 44 66 
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
2
Enter the position of the element to delete: 44
Invalid position!
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
5
1 5 22 44 66 
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
2
Enter the position of the element to delete: 2
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
5
1 5 44 66 
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
3
Enter the element to search: 5
Element found at position: 1
Choose an operation:
1. Insert an element
2. Delete an element
3. Search for an element
4. Sort the array
5. Display the array
6. Exit
6








Program 2 sample output:-

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 1
Enter value to insert at beginning: 5

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 1
Enter value to insert at beginning: 2

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 2
Enter value to insert at end: 9

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 10
2 -> 5 -> 9 -> NULL

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 3
Enter value to insert and position: 6 3

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 10
2 -> 5 -> 6 -> 9 -> NULL

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 4

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 5

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 10
5 -> 6 -> NULL

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 7
Enter value to search: 6
Element found at position: 1

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 7
Enter value to search: 1
Element not found.

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 8
Number of nodes: 2

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 9
List reversed.

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 10
6 -> 5 -> NULL

Menu:
1. Insert at Beginning
2. Insert at End
3. Insert at Position
4. Delete from Beginning
5. Delete from End
6. Delete from Position
7. Search for an Element
8. Count Nodes
9. Reverse List
10. Print List
0. Exit

Enter your choice: 0
Exiting the program.








Program 3 sample output:-

Enter the degree of the first polynomial: 3
Enter coefficient for x^3: 2
Enter coefficient for x^2: 5
Enter coefficient for x^1: 1
Enter coefficient for x^0: 9

Enter the degree of the second polynomial: 3
Enter coefficient for x^3: 4
Enter coefficient for x^2: 9
Enter coefficient for x^1: 6
Enter coefficient for x^0: 2

First Polynomial: +2x^3+5x^2+1x^1+9x^0 
Second Polynomial: +4x^3+9x^2+6x^1+2x^0

Resultant Polynomial: +8x^6+38x^5+61x^4+79x^3+97x^2+56x^1+18x^0

Do you want to multiply another pair of polynomials? (y/n): y

Enter the degree of the first polynomial: 2
Enter coefficient for x^2: 4
Enter coefficient for x^1: 6
Enter coefficient for x^0: 1

Enter the degree of the second polynomial: 8
Enter coefficient for x^8: 4
Enter coefficient for x^7: 3
Enter coefficient for x^6: 9
Enter coefficient for x^5: 4
Enter coefficient for x^4: 6
Enter coefficient for x^3: 8
Enter coefficient for x^2: 2
Enter coefficient for x^1: 0
Enter coefficient for x^0: 1

First Polynomial: +4x^2+6x^1+1x^0
Second Polynomial: +4x^8+3x^7+9x^6+4x^5+6x^4+8x^3+2x^20x^1+1x^0

Resultant Polynomial: +16x^10+36x^9+58x^8+73x^7+57x^6+72x^5+62x^4+20x^3+6x^2+6x^1+1x^0

Do you want to multiply another pair of polynomials? (y/n): n








Program 4 sample output:-

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 1
Enter value to enqueue: 5
5 enqueued to queue

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 1
Enter value to enqueue: 4
4 enqueued to queue

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 1
Enter value to enqueue: 9
9 enqueued to queue

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 1
Enter value to enqueue: 7
7 enqueued to queue

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 3
5 4 9 7 

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 2
Dequeued element: 5

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 2
Dequeued element: 4

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 3
9 7 

1. Enqueue
2. Dequeue
3. Display
4. Exit
Enter your choice: 4
Exiting...








Program 5 sample output:-

PreOrder Traversal:  5  3  2  1  4  6  7  8
PostOrder Traversal:  1  2  4  3  7  8  6  5
InOrder Traversal:  1  2  3  4  5  7  6  8








Program 6 sample output:-

Pre-order traversal: 50 30 20 40 70 60 80
Enter a value to insert into the BST: 90
Pre-order traversal after insertion: 50 30 20 40 70 60 80 90 








Program 7 (a) sample output:-

Enter the size of the array:
5

Enter the elements of the array:
2
9
1
7
3

Given array is: 
2 9 1 7 3       

Sorted array is:
1 2 3 7 9   








Program 7 (b) sample output:-

Enter the size of the array:
6

Enter the elements of the array:
7
2
9
4
1
6

Given array is: 
7 2 9 4 1 6     

Sorted array is:
1 2 4 6 7 9     








Program 7 (c) sample output:-

Enter the size of the array:
7
Enter the elements of the array:
9
4
6
1
0
2
5

Given array is: 
9 4 6 1 0 2 5   

Sorted array is:
0 1 2 4 5 6 9   








Program 8 sample output:-

Enter the number of vertices and edges:
6 7
Enter the edges (u v):
0 1
0 2
1 3
1 4
2 4
3 5
4 5
Enter the starting vertex:
0
BFS Traversal: 0 1 2 3 4 5
DFS Traversal (Recursive): 0 1 3 5 4 2 
DFS Traversal (Iterative): 0 1 3 5 4 2 








Program 9 sample output:-

Enter the number of matrices: 4
Enter the dimensions of the matrices:
10 5 20 10 5
Minimum number of multiplications is: 1500








Program 10 sample output:-

Enter the first string: aabcde
Enter the second string: abbcddeee
Length of Longest Common Subsequence: 5
Longest Common Subsequence: abcde    








Program 11 sample output:-

Enter the number of vertices: 5
Enter the adjacency matrix (0 if no edge):
0 2 0 6 0
2 0 3 8 5
0 3 0 0 7
6 8 0 0 9
0 5 7 9 0
Edge    Weight
0 - 1   2     
1 - 2   3     
0 - 3   6     
1 - 4   5  