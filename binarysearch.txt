/**
Advance Data Structure and Algorithm 

Binary search

  BinarySearch(data,low,high,item,loc)
1. while(low<=high)
2.    mid=(low+high)/2
3.    if(data[mid]>item)
4.           high=mid-1
5.    if(data[mid]<item)
6.           low=mid+1
7.    else
8.           loc=mid
9.           return
10. loc=-1 & return
**/
#include <stdio.h>
#include <stdlib.h>

int binarysearch(int *data,int low,int high,int item)
{
    while(low<=high)
    {
       int mid=(high+low)/2;
       
       if(item<data[mid])
       {
           high=mid-1;
       }
       else if(item>data[mid])
       {
           low = mid +1;
       }
       else
       {
           return mid;
       }
    }
    return -1;
}

int main(void)
{
    int size,item;
    printf("Enter the size of the array:\n");
    scanf("%d",&size);
    int *data=(int *)malloc(size * sizeof(int));
    
    printf("Enter the array values: \n");
    for(int i=0;i<size;i++)
    {
        scanf("%d",&data[i]);
    }
    
    for(int i=0;i<size;i++)
    {
        printf("%d, ",data[i]);
    }
    
    printf("\n\nEnter the element to be searched\n");
    scanf("%d",&item);
    
    int result=binarysearch(data,0,size,item);
    
    if(result=-1)
    {
        printf("not found");
    }
    else
    {
        printf("Element is found at index %d",result);
    }

    return 0;
}